// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Services.Data.Models;

#nullable disable

namespace Services.Data.Migrations
{
    [DbContext(typeof(ModelDBContext))]
    [Migration("20250517190147_CreateWorkFlow")]
    partial class CreateWorkFlow
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Arabic_100_BIN")
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Services.Data.Models.AuditLog", b =>
                {
                    b.Property<int>("AuditLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuditLogId"), 1L, 1);

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryKeyValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuditLogId");

                    b.ToTable("AuditLog");
                });

            modelBuilder.Entity("Services.Data.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"), 1L, 1);

                    b.Property<bool?>("ItemInUse")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ItemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Services.Data.Models.MasterDatum", b =>
                {
                    b.Property<int>("MasterDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MasterDataId"), 1L, 1);

                    b.Property<int>("ColumnsNumberCount")
                        .HasColumnType("int");

                    b.Property<bool?>("InUse")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("MasterDataName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MasterDataId")
                        .HasName("PK_TbData");

                    b.ToTable("MasterData");
                });

            modelBuilder.Entity("Services.Data.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<bool>("RoleIsactive")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Services.Data.Models.SelectedItem", b =>
                {
                    b.Property<int>("SelectedItemsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SelectedItemsId"), 1L, 1);

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("MasterDataId")
                        .HasColumnType("int");

                    b.HasKey("SelectedItemsId")
                        .HasName("PK_TbDataItem");

                    b.HasIndex("ItemId");

                    b.HasIndex("MasterDataId");

                    b.ToTable("SelectedItems");
                });

            modelBuilder.Entity("Services.Data.Models.SelectedNumber", b =>
                {
                    b.Property<int>("SelectedNumberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SelectedNumberId"), 1L, 1);

                    b.Property<int>("ColumnsNumber")
                        .HasColumnType("int");

                    b.Property<int>("MasterDataId")
                        .HasColumnType("int");

                    b.HasKey("SelectedNumberId");

                    b.HasIndex("MasterDataId");

                    b.ToTable("SelectedNumber", (string)null);
                });

            modelBuilder.Entity("Services.Data.Models.UserInfo", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<DateTime?>("CrDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CrUserId")
                        .HasColumnType("int");

                    b.Property<bool?>("Isactive")
                        .HasColumnType("bit");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpUserId")
                        .HasColumnType("int");

                    b.Property<string>("UserFullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("Services.Data.Models.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"), 1L, 1);

                    b.Property<DateTime?>("CrDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CrUser")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpuserId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Services.Data.Models.SelectedItem", b =>
                {
                    b.HasOne("Services.Data.Models.Item", "Item")
                        .WithMany("SelectedItems")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK_TbDataItem_Items");

                    b.HasOne("Services.Data.Models.MasterDatum", "MasterData")
                        .WithMany("SelectedItems")
                        .HasForeignKey("MasterDataId")
                        .IsRequired()
                        .HasConstraintName("FK_TbDataItem_TbMasterData");

                    b.Navigation("Item");

                    b.Navigation("MasterData");
                });

            modelBuilder.Entity("Services.Data.Models.SelectedNumber", b =>
                {
                    b.HasOne("Services.Data.Models.MasterDatum", "MasterData")
                        .WithMany("SelectedNumbers")
                        .HasForeignKey("MasterDataId")
                        .IsRequired()
                        .HasConstraintName("FK_SelectedNumber_MasterData");

                    b.Navigation("MasterData");
                });

            modelBuilder.Entity("Services.Data.Models.UserRole", b =>
                {
                    b.HasOne("Services.Data.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Services.Data.Models.UserInfo", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Services.Data.Models.Item", b =>
                {
                    b.Navigation("SelectedItems");
                });

            modelBuilder.Entity("Services.Data.Models.MasterDatum", b =>
                {
                    b.Navigation("SelectedItems");

                    b.Navigation("SelectedNumbers");
                });

            modelBuilder.Entity("Services.Data.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Services.Data.Models.UserInfo", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
